#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# This file is part of Librarian, licensed under GNU Affero GPLv3 or later.
# Copyright Â© Fundacja Nowoczesna Polska. See NOTICE for more information.
#
import os.path
import optparse

from librarian import DirDocProvider, ParseError
from librarian.parser import WLDocument


if __name__ == '__main__':
    # Parse commandline arguments
    usage = """Usage: %prog [options] SOURCE [SOURCE...]
    Convert SOURCE files to FB2 format."""

    parser = optparse.OptionParser(usage=usage)

    parser.add_option('-v', '--verbose', action='store_true', dest='verbose', default=False,
        help='print status messages to stdout')
    parser.add_option('-c', '--with-cover', action='store_true', dest='with_cover', default=False,
                      help='create default cover')
    parser.add_option('-w', '--working-copy', action='store_true', dest='working_copy', default=False,
                      help='mark the output as a working copy')
    parser.add_option('-d', '--make-dir', action='store_true', dest='make_dir', default=False,
                      help='create a directory for author and put the PDF in it')
    parser.add_option('-o', '--output-file', dest='output_file', metavar='FILE',
                      help='specifies the output file')
    parser.add_option('-O', '--output-dir', dest='output_dir', metavar='DIR',
                      help='specifies the directory for output')

    options, input_filenames = parser.parse_args()

    if len(input_filenames) < 1:
        parser.print_help()
        exit(1)

    flags = []
    if options.working_copy:
        flags.append('working-copy')

    # Do some real work
    try:
        for main_input in input_filenames:
            if options.verbose:
                print main_input

            path, fname = os.path.realpath(main_input).rsplit('/', 1)
            provider = DirDocProvider(path)
            if not (options.output_file or options.output_dir):
                output_file = os.path.splitext(main_input)[0] + '.fb2'
            else:
                output_file = None

            doc = WLDocument.from_file(main_input, provider=provider)
            fb2 = doc.as_fb2(cover=options.with_cover, flags=flags)

            doc.save_output_file(fb2,
                output_file, options.output_dir, options.make_dir, 'fb2')

    except ParseError, e:
        print '%(file)s:%(name)s:%(message)s' % {
            'file': main_input,
            'name': e.__class__.__name__,
            'message': e
        }
